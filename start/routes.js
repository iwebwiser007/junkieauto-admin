"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Route_1 = __importDefault(global[Symbol.for('ioc.use')]("Adonis/Core/Route"));
Route_1.default.get('/', async ({ view }) => {
    return view.render('welcome');
});
Route_1.default.group(() => {
    Route_1.default.post("register", "AuthController.Register");
    Route_1.default.post("login", "AuthController.Login");
    Route_1.default.post("verify-otp", "AuthController.Otp_verify");
    Route_1.default.post("reset-password", "AuthController.Reset_password");
    Route_1.default.post("forgot-password", "AuthController.Forgot_password");
    Route_1.default.post("new-password", "AuthController.New_password");
    Route_1.default.post("check-token", "AuthController.Check_token");
    Route_1.default.get('dashboard', 'UsersController.Dashboard');
    Route_1.default.get('all-auction-list', "UsersController.All_auction_list");
    Route_1.default.get('auction-details/:auction_id', "UsersController.Auction_details");
    Route_1.default.get('auction-list', "UsersController.Auction_filter_list");
    Route_1.default.get('auction-search-filter', "UsersController.Auction_search_filter");
    Route_1.default.get('auction-search', "UsersController.Auction_search");
    Route_1.default.get("get-category", "UsersController.Get_category");
    Route_1.default.get("get-sub-category/:id", "UsersController.Get_sub_category");
    Route_1.default.group(() => {
        Route_1.default.get('auction-details-with-login/:auction_id', 'UsersController.Auction_details_with_login');
        Route_1.default.get('check-winner/:auction_id', 'UsersController.Check_winner');
        Route_1.default.post("change-password", "UsersController.Change_password");
        Route_1.default.get("logout", "UsersController.Logout");
        Route_1.default.get("users-data", "UsersController.Userdata");
        Route_1.default.post("update-profile", "UsersController.Update_profile");
        Route_1.default.post("update-document-data", "UsersController.Update_document_data");
        Route_1.default.post("update-document-file", "UsersController.Update_document_file");
        Route_1.default.post("add-document-file", "UsersController.Add_document_file");
        Route_1.default.post("card-save", "UsersController.Cardsave");
        Route_1.default.get("get-card-detail", "UsersController.Get_Card_detail");
        Route_1.default.post('new-auction', "UsersController.New_auction");
        Route_1.default.post('update-auction/:auction_id', "UsersController.Update_auction");
        Route_1.default.post('close-auction/:auction_id', "UsersController.Closed_auction");
        Route_1.default.post('reject-bid', "UsersController.Reject_bid");
        Route_1.default.post('remove-auction-media/:id', "UsersController.Remove_auction_media");
        Route_1.default.get('my-auction-list', "UsersController.My_auction_list");
        Route_1.default.get('my-auction-details/:auction_id', "UsersController.My_auction_details");
        Route_1.default.get('my-expried-auction', "UsersController.My_expried_auction");
        Route_1.default.post('bid', "UsersController.Bid");
        Route_1.default.get('my-bid-list', "UsersController.My_bid_list");
        Route_1.default.get('bid-detail/:id', "UsersController.Bid_details");
        Route_1.default.get('bid-mobile-detail/:id', "UsersController.Bid_mobile_details");
        Route_1.default.get('my-auction-bid-list', "UsersController.My_auction_bid_list");
        Route_1.default.post('make-auction-winner', "UsersController.Make_auction_winner");
        Route_1.default.post('add-wish-list', "UsersController.Add_wish_list");
        Route_1.default.get('my-wish-list', "UsersController.My_wish_list");
        Route_1.default.post('my-wish-delete', "UsersController.My_wish_list_delete");
        Route_1.default.get('save-search', 'UsersController.Save_search');
        Route_1.default.get('update-save-search', 'UsersController.Update_save_search');
        Route_1.default.get('get-search', 'UsersController.Get_search');
        Route_1.default.post('delete-search', 'UsersController.Delete_search');
        Route_1.default.get('notification-list', 'UsersController.Notification_list');
        Route_1.default.get('notification-list-all', 'UsersController.Notification_list_all');
        Route_1.default.get('notification-read/:id', 'UsersController.Notification_read');
        Route_1.default.post('notification-deleted/:id', 'UsersController.Notification_deleted');
    }).middleware("auth:api");
}).prefix("api");
//# sourceMappingURL=routes.js.map